"""
Задание 2.

Реализуйте два алгоритма.

Первый, в виде функции, должен обеспечивать поиск минимального значения для списка.
В основе алгоритма должно быть сравнение каждого числа со всеми другими элементами списка.
Сложность такого алгоритма: O(n^2) - квадратичная.

Второй, в виде функции, должен обеспечивать поиск минимального значения для списка.
Сложность такого алгоритма: O(n) - линейная.

Примечание:
Построить список можно через генераторного выражения списка.
Если у вас возникают сложности, постарайтесь подумать как можно решить задачу,
а не писать "мы это не проходили)".
Алгоритмизатор должен развивать мышление, а это прежде всего практика.
А без столкновения со сложностями его не развить.
"""

# Сложность О(N)
def min_integer_one(lst_obj):

    lst_copy = list(lst_obj)    # О(N)
    lst_copy.sort()             # О(N log N)
    return (lst_copy[0])        # О(1)

my_list = [95,85,69,2,8,31,1,5,9]
min_int = min_integer_one(my_list)
print(min_int)

# Сложность О(N^2)

def min_integer_two(lst_obj_1):

    lst_copy = lst_obj_1[0]
    for el in lst_obj_1:
        if el < lst_copy : lst_copy = el
    return lst_copy


my_list = [95,85,69,2,8,31,1,5,9]
min_int_1 = min_integer_two(my_list)
print(min_int_1)